{"version":3,"sources":["globalState/actions.ts","globalState/reducer.ts","context/context.tsx","hooks/useAxios.tsx","components/Header/Counter/Counter.tsx","components/Header/SearchInput/SearchInput.tsx","components/Header/Header.tsx","components/List/ListItem/ListItem.tsx","components/List/List.tsx","components/Loader/Loader.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Actions","reducer","state","action","type","START_LOADING","Object","objectSpread","isLoading","FINISH_LOADING","SAVE_SEARCH_DATA","searchData","data","SAVE_COUNTER_DATA","caseCount","SAVE_TOP_DEBTOR_DATA","topDebtor","SET_ACTIVE_ITEM","activeItemId","id","SET_ERROR","error","initialState","AppContext","React","createContext","dispatch","undefined","AppContextProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","contextValue","useMemo","react_default","a","createElement","Provider","value","children","useAxios","request","dependency","query","_useState","useState","_useState2","setError","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setData","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","axios","sent","statusText","t0","stop","apply","this","arguments","req","Counter","useContext","_useAxios","url","method","className","SearchInput","setQuery","search","setSearch","Number","Name","NIP","onSubmit","e","preventDefault","toString","length","htmlFor","name","onChange","currentTarget","Header","Fragment","Header_SearchInput_SearchInput","Header_Counter_Counter","ListItem","_ref$data","Address","DocumentType","Id","Price","Value","active","activeItemElements","concat","onClick","event","List","_useContext","_useContext$state","dataToShow","map","elementData","List_ListItem_ListItem","key","Loader","loadingInterval","percentage","setPercentage","setInterval","randomNumber","min","max","Math","floor","random","prevState","clearInterval","style","width","App","context_AppContextProvider","components_Header_Header","components_Loader_Loader","components_List_List","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6507131.chunk.js","sourcesContent":["export enum Actions {\n  START_LOADING = \"START_LOADING\",\n  FINISH_LOADING = \"FINISH_LOADING\",\n  SAVE_SEARCH_DATA = \"SAVE_SEARCH_DATA\",\n  SAVE_COUNTER_DATA = \"SAVE_COUNTER_DATA\",\n  SAVE_TOP_DEBTOR_DATA = \"SAVE_TOP_DEBTOR_DATA\",\n  SET_ACTIVE_ITEM = \"SET_ACTIVE_ITEM\",\n  SET_ERROR = \"SET_ERROR\"\n}\n","import { Actions } from \"./actions\"\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case Actions.START_LOADING:\n      return { ...state, isLoading: true }\n    case Actions.FINISH_LOADING:\n      return { ...state, isLoading: false }\n    case Actions.SAVE_SEARCH_DATA:\n      return { ...state, searchData: action.data }\n    case Actions.SAVE_COUNTER_DATA:\n      return { ...state, caseCount: action.data }\n    case Actions.SAVE_TOP_DEBTOR_DATA:\n      return { ...state, topDebtor: action.data }\n      case Actions.SET_ACTIVE_ITEM:\n        return { ...state, activeItemId: action.id }\n        case Actions.SET_ERROR:\n          return { ...state, error: action.error }\n    default:\n      return\n  }\n}\n","import React, { useMemo, useReducer } from \"react\"\nimport { reducer } from \"../globalState/reducer\"\nimport { GlobalState } from \"../globalState/types\"\n\nconst initialState: GlobalState = {\n  isLoading: false\n}\n\nconst AppContext = React.createContext({\n  state: initialState,\n  dispatch: undefined as any\n})\n\nconst AppContextProvider = props => {\n  const [state, dispatch]: [any, any] = useReducer(\n    reducer,\n    initialState as GlobalState\n  )\n  const contextValue: {\n    state: GlobalState\n    dispatch: any\n  } = useMemo(() => {\n    return { state, dispatch }\n  }, [state, dispatch])\n  return (\n    <AppContext.Provider value={contextValue}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n\nexport { AppContext, AppContextProvider }\n","import axios, { AxiosRequestConfig } from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { Actions } from \"../globalState/actions\"\n\nconst useAxios = (\n  request: AxiosRequestConfig,\n  dependency: string | number | null,\n  dispatch?: any,\n  action?: Actions,\n  query?: string | number\n) => {\n  const [error, setError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    if (query === \"\") {\n      return\n    }\n    const req = async () => {\n      setLoading(true)\n      dispatch && dispatch({ type: Actions.START_LOADING })\n      try {\n        const response = await axios(request)\n        if (response.statusText === \"OK\") {\n          const body = response.data\n          setData(body)\n          dispatch && dispatch({ type: Actions.SET_ERROR, error: null })\n          dispatch && action && dispatch({ type: action, data: body })\n        } else {\n          setError(response.statusText)\n          dispatch &&\n            dispatch({ type: Actions.SET_ERROR, error: response.statusText })\n        }\n      } catch (error) {\n        setError(error.statusText)\n        dispatch &&\n          dispatch({ type: Actions.SET_ERROR, error: error.statusText })\n      }\n      setLoading(false)\n      dispatch && dispatch({ type: Actions.FINISH_LOADING })\n    }\n    req()\n  }, [dependency])\n  return { error, loading, data }\n}\n\nexport default useAxios\n","import React, { useContext, ReactElement } from \"react\"\nimport { AppContext } from \"../../../context/context\"\nimport { Actions } from \"../../../globalState/actions\"\nimport useAxios from \"../../../hooks/useAxios\"\nimport \"./Counter.scss\"\n\nconst Counter = (): ReactElement => {\n  const { dispatch } = useContext(AppContext)\n\n  const { loading, data } = useAxios(\n    {\n      url:\n        \"http://rekrutacja-webhosting.it.krd.pl/api/Recruitment/GetDebtsCount\",\n      method: \"GET\"\n    },\n    null,\n    dispatch,\n    Actions.SAVE_COUNTER_DATA\n  )\n\n  return (\n    <div className=\"Counter\">\n      <p className=\"Counter-title\">Całkowita ilość spraw</p>\n      <span className=\"Counter-number\">\n        {loading && \"Loading...\"}\n        {data && data}\n      </span>\n    </div>\n  )\n}\n\nexport default Counter\n","import React, { ChangeEvent, useContext, useState } from \"react\"\nimport { AppContext } from \"../../../context/context\"\nimport { Actions } from \"../../../globalState/actions\"\nimport useAxios from \"../../../hooks/useAxios\"\nimport \"./SearchInput.scss\"\n\nconst SearchInput: React.FC = () => {\n  const [query, setQuery] = useState<number | string>(\"\")\n  const [search, setSearch] = useState<number | string | null>(null)\n\n  const { dispatch } = useContext(AppContext)\n\n  useAxios(\n    {\n      url:\n        \"http://rekrutacja-webhosting.it.krd.pl/api/Recruitment/GetFilteredDebts\",\n      method: \"POST\",\n      data: { Number: query, Name: query, NIP: query }\n    },\n    search,\n    dispatch,\n    Actions.SAVE_SEARCH_DATA,\n    query\n  )\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>): void =>\n    setQuery(e.currentTarget.value)\n  const handleOnSubmit = (e: ChangeEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n    if (query && query.toString().length < 3) {\n      dispatch({\n        type: Actions.SET_ERROR,\n        error: \"Proszę wprowadź co najmniej 3 znaki.\"\n      })\n    } else {\n      setSearch(query)\n      dispatch({ type: Actions.SET_ERROR, error: null })\n    }\n  }\n  return (\n    <form className=\"SearchInput-form\" onSubmit={handleOnSubmit}>\n      <label className=\"SearchInput-label\" htmlFor=\"searchInput\">\n        Podaj numer sprawy, nazwę lub NIP dłużnika\n      </label>\n      <div className=\"SearchInput-inputContainer\">\n        <input\n          className=\"SearchInput-input\"\n          type=\"text\"\n          name=\"searchInput\"\n          value={query}\n          onChange={handleOnChange}\n        />\n        <input className=\"SearchInput-submit\" type=\"submit\" value=\"Szukaj\" />\n      </div>\n    </form>\n  )\n}\n\nexport default SearchInput\n","import React, { useContext, ReactElement } from \"react\"\nimport { AppContext } from \"../../context/context\"\nimport Counter from \"./Counter/Counter\"\nimport \"./Header.scss\"\nimport SearchInput from \"./SearchInput/SearchInput\"\n\nconst Header = (): ReactElement => {\n  return (\n    <>\n    <div className=\"Header-backGround\"></div>\n    <div className=\"Header AppFrame-content\">\n      <SearchInput />\n      <Counter />\n    </div>\n    </>\n  )\n}\n\nexport default Header\n","import React, { MouseEvent, ReactElement, useContext } from \"react\"\nimport { AppContext } from \"../../../context/context\"\nimport { Actions } from \"../../../globalState/actions\"\nimport { Debt } from \"../../../globalState/types\"\nimport \"./ListItem.scss\"\n\nexport interface ListItemProps {\n  data: Debt\n  active: boolean\n}\n\nconst ListItem = ({\n  data: { Address, DocumentType, Id, NIP, Name, Number, Price, Value },\n  active\n}: ListItemProps): ReactElement => {\n  const { dispatch } = useContext(AppContext)\n  const activeItemElements = (\n    <>\n      <div className=\"ListItem-cell ListItem-address ListItem-cell--smallFont\">\n        <h6 className=\"ListItem-cell--heading\">Adres</h6>\n        {Address}\n      </div>\n      <div className=\"ListItem-documentType ListItem-cell--smallFont\">\n        <h6 className=\"ListItem-cell--heading\">\n          Rodzaj/typ dokuemntu stanowiący <br />\n          podstawę dla wierzytelności\n        </h6>\n        {DocumentType}\n      </div>\n      <div className=\"ListItem-price ListItem-cell--smallFont\">\n        <h6 className=\"ListItem-cell--heading\">Cena zadłużenia</h6>\n        {Price}\n      </div>\n      <div className=\"ListItem-number ListItem-cell--smallFont\">\n        <h6 className=\"ListItem-cell--heading\">Numer</h6>\n        {Number}\n      </div>\n    </>\n  )\n  const clickHandler = (event: MouseEvent<HTMLButtonElement>): void => {\n    if (active) {\n      dispatch({ type: Actions.SET_ACTIVE_ITEM, id: null })\n    } else {\n      dispatch({ type: Actions.SET_ACTIVE_ITEM, id: Id })\n    }\n  }\n  return (\n    <div className={`ListItem ${active ? \"ListItem--active\" : \"\"}`}>\n      <div className=\"ListItem-name\">\n        {active && <h6 className=\"ListItem-cell--heading\">Dłużnik</h6>}\n        {Name}\n      </div>\n      <div className=\"ListItem-NIP\">\n        {active && <h6 className=\"ListItem-cell--heading\">NIP</h6>}\n        {NIP}\n      </div>\n      <div className=\"ListItem-value\">\n        {active && <h6 className=\"ListItem-cell--heading\">Kwota zadłużenia</h6>}\n        {Value}\n      </div>\n      <button className=\"ListItem-button\" onClick={clickHandler}>\n        {active ? \"Mniej\" : \"Więcej\"}\n      </button>\n      {active && activeItemElements}\n    </div>\n  )\n}\n\nexport default ListItem\n","import React, { useContext } from \"react\"\nimport { AppContext } from \"../../context/context\"\nimport { Actions } from \"../../globalState/actions\"\nimport { Debt } from \"../../globalState/types\"\nimport useAxios from \"../../hooks/useAxios\"\nimport \"./List.scss\"\nimport ListItem from \"./ListItem/ListItem\"\n\nconst List: React.FC = () => {\n  const {\n    state: { isLoading, searchData, topDebtor, activeItemId, error },\n    dispatch\n  } = useContext(AppContext)\n\n  useAxios(\n    {\n      url: \"http://rekrutacja-webhosting.it.krd.pl/api/Recruitment/GetTopDebts\",\n      method: \"GET\"\n    },\n    null,\n    dispatch,\n    Actions.SAVE_TOP_DEBTOR_DATA\n  )\n\n  const dataToShow: Debt[] | undefined = searchData || topDebtor\n\n  if (isLoading) {\n    return <p className=\"AppFrame-content\">Loading...</p>\n  }\n  if (error) {\n    return <p className=\"AppFrame-content AppFrame-error\">{error}</p>\n  }\n  if (dataToShow && !dataToShow.length) {\n    return (\n      <p className=\"AppFrame-content\">\n        Nie znaleziono żadnych wyników spełniających kryteria.\n      </p>\n    )\n  }\n  return (\n    <>\n      <div className=\"List AppFrame-content\">\n        <div className=\"List-title\">\n          <span className=\"List-title--heading List-name\">Dłużnik</span>\n          <span className=\"List-title--heading List-NIP\">NIP</span>\n          <span className=\"List-title--heading List-value\">\n            Kwota zadłużenia\n          </span>\n        </div>\n        <div className=\"List-items\">\n          {dataToShow &&\n            dataToShow.map((elementData: Debt) => (\n              <ListItem\n                data={elementData}\n                active={elementData.Id === activeItemId}\n                key={elementData.Id}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default List\n","import React, { useState, useContext, ReactElement, useEffect } from \"react\"\nimport \"./Loader.scss\"\nimport { AppContext } from \"../../context/context\"\n\nconst Loader = (): ReactElement => {\n  const [percentage, setPercentage] = useState<number>(0)\n\n  const {\n    state: { isLoading }\n  } = useContext(AppContext)\n\n  let loadingInterval: NodeJS.Timer\n\n  const getRandomIntFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  // Show fake progress to the user so he know something is happening\n  const increasePercentage = (): void => {\n    if (percentage < 85) {\n      const randomNumber = getRandomIntFromInterval(5, 10)\n      setPercentage(prevState => prevState + randomNumber)\n    }\n  }\n\n  if (isLoading) {\n    loadingInterval = setInterval(increasePercentage, 300)\n  }\n\n  useEffect(() => {\n    if (!isLoading) {\n      setPercentage(0)\n      clearInterval(loadingInterval)\n    }\n  }, [isLoading])\n\n  useEffect(() => {\n    return () => {\n      loadingInterval && clearInterval(loadingInterval)\n    }\n  })\n\n  return (\n    <div className=\"Loader AppFrame-content\">\n      {isLoading && (\n        <div className=\"Loader-filler\" style={{ width: `${percentage}%` }} />\n      )}\n    </div>\n  )\n}\n\nexport default Loader\n","import React from \"react\"\nimport Header from \"../Header/Header\"\nimport { AppContextProvider } from \"./../../context/context\"\nimport \"./App.scss\"\nimport List from \"../List/List\"\nimport Loader from \"../Loader/Loader\";\n\nconst App: React.FC = () => {\n  return (\n    <AppContextProvider>\n      <div className=\"AppFrame\">\n        <Header />\n        <Loader />\n        <List />\n      </div>\n    </AppContextProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}